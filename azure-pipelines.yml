# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pr:
  branches:
    include:
      - main  # Trigger the pipeline on PRs targeting the 'main' branch..

trigger:
  branches:
    include:
      - main  # This triggers the pipeline on push to 'main' branch, as already defined

pool:
  vmImage: 'ubuntu-latest'  # Use a Linux-based VM image (you can change this to 'windows-latest' or 'macos-latest' if needed)

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
    - job: BuildJob
      displayName: 'Build Job'
      steps:
        - checkout: self

        - task: NodeTool@0
          inputs:
            versionSpec: '16.x'  # Specify the version of Node.js (you can change this as needed)
          displayName: 'Install Node.js'

        - task: npm@1
          inputs:
            command: 'install'  # Install dependencies from package.json
          displayName: 'Install dependencies'

        - task: CmdLine@2
          inputs:
            script: |
              sleep 10

        - script: |
            echo "Build Reason: $(Build.Reason)"
            echo "PR ID: $(System.PullRequest.PullRequestId)"
            echo "Source Branch: $(System.PullRequest.SourceBranch)"
            echo "Target Branch: $(System.PullRequest.TargetBranch)"
            echo "Full List of Available Variables:"
            env  # This will list all environment variables available in the build context
          displayName: 'Debug PR Information'

        - task: XplatGenerateReleaseNotes@4
          displayName: 'Generate Release Notes'
          inputs:
            outputfile: '$(Build.ArtifactStagingDirectory)/releasenotes.md'  # Path to output the release notes file
            templateLocation: 'inline'  # Use an inline template for generating the release notes
            inlinetemplate: |
              ## Build {{buildDetails.buildNumber}}
              * **Branch**: {{buildDetails.sourceBranch}}
              * **Tags**: {{buildDetails.tags}}
              * **Completed**: {{buildDetails.finishTime}}
              * **Previous Build**: {{compareBuildDetails.buildNumber}}

              ## Associated Pull Requests 

              Build Reason: {{Build.Reason}}
              Pull Request ID: {{System.PullRequest.PullRequestId}}
              Source Branch: {{System.PullRequest.SourceBranch}}
              Target Branch: {{System.PullRequest.TargetBranch}}

              {{#if System.PullRequest.PullRequestId}}
                Pull Request ID: {{System.PullRequest.PullRequestId}}
                Source Branch: {{System.PullRequest.SourceBranch}}
                Target Branch: {{System.PullRequest.TargetBranch}}
              {{else}}
                <p>No pull request information found</p>
              {{/if}}

              {{#if pullRequests}}
                {{#if pullRequests.length}}
                  {{#forEach pullRequests}}
                    * **[{{this.pullRequestId}}]({{replace (replace this.url "_apis/git/repositories" "_git") "pullRequests" "pullRequest"}})** {{this.title}}
                    * Associated Work Items
                    {{#forEach this.associatedWorkitems}}
                      {{#with (lookup_a_work_item ../../relatedWorkItems this.url)}}
                        - [{{this.id}}]({{replace this.url "_apis/wit/workItems" "_workitems/edit"}}) - {{lookup this.fields 'System.Title'}}
                      {{/with}}
                    {{/forEach}}
                    * Associated Commits (this includes commits on the PR source branch not associated directly with the build)
                    {{#forEach this.associatedCommits}}
                        - [{{this.commitId}}]({{this.remoteUrl}}) -  {{this.comment}}
                    {{/forEach}}
                  {{/forEach}}
                {{else}}
                  <p>No pull requests length</p>
                {{/if}}
              {{else}}
                <p>No pull requests</p>
              {{/if}}

              # Global list of WI with PRs, parents and children
              {{#forEach this.workItems}}
              {{#if isFirst}}### WorkItems {{/if}}
              *  **{{this.id}}**  {{lookup this.fields 'System.Title'}}
                - **WIT** {{lookup this.fields 'System.WorkItemType'}}
                - **Tags** {{lookup this.fields 'System.Tags'}}
                - **Assigned** {{#with (lookup this.fields 'System.AssignedTo')}} {{displayName}} {{/with}}
                - **Description** {{{lookup this.fields 'System.Description'}}}
                - **PRs**
              {{#forEach this.relations}}
              {{#if (contains this.attributes.name 'Pull Request')}}
              {{#with (lookup_a_pullrequest ../../pullRequests  this.url)}}
                    - {{this.pullRequestId}} - {{this.title}}
              {{/with}}
              {{/if}}
              {{/forEach}}
                - **Parents**
              {{#forEach this.relations}}
              {{#if (contains this.attributes.name 'Parent')}}
              {{#with (lookup_a_work_item ../../relatedWorkItems  this.url)}}
                    - {{this.id}} - {{lookup this.fields 'System.Title'}}
                    {{#forEach this.relations}}
                    {{#if (contains this.attributes.name 'Parent')}}
                    {{#with (lookup_a_work_item ../../../../relatedWorkItems  this.url)}}
                      - {{this.id}} - {{lookup this.fields 'System.Title'}}
                    {{/with}}
                    {{/if}}
                    {{/forEach}}
              {{/with}}
              {{/if}}
              {{/forEach}}
                - **Children**
              {{#forEach this.relations}}
              {{#if (contains this.attributes.name 'Child')}}
              {{#with (lookup_a_work_item ../../relatedWorkItems  this.url)}}
                    - {{this.id}} - {{lookup this.fields 'System.Title'}}
              {{/with}}
              {{/if}}
              {{/forEach}}
                - **Tested By**
              {{#forEach this.relations}}
              {{#if (contains this.attributes.name 'Tested By')}}
              {{#with (lookup_a_work_item ../../testedByWorkItems  this.url)}}
                    - {{this.id}} - {{lookup this.fields 'System.Title'}}
              {{/with}}
              {{/if}}
              {{/forEach}}
              {{/forEach}}

              # Global list of CS 
              {{#if commits}}
                {{#if commits.length}}
                  {{#forEach commits}}
                    {{#if isFirst}}### Associated commits{{/if}}
                    * ** ID{{this.id}}**
                      -  **Message:** {{this.message}}
                      -  **Commited by:** {{this.author.displayName}}
                      -  **FileCount:** 
                      {{#if this.changes}}
                        {{#if this.changes.length}}
                          {{this.changes.length}}
                        {{/if}}
                      {{else}}
                        <p>No changes</p>
                      {{/if}}
                    {{#forEach this.changes}}
                          -  **File path (TFVC or TfsGit):** {{this.item.path}}
                          -  **File filename (GitHub):** {{this.filename}}
                    {{/forEach}}
                  {{/forEach}}
                {{else}}
                  <p>No commits length</p>
                {{/if}}
              {{else}}
                <p>No commits</p>
              {{/if}}
            # You can add more parameters here to customize the release note

        - publish: $(Build.ArtifactStagingDirectory)/releasenotes.md  # Publish the release notes as an artifact
          artifact: releaseNotes
          displayName: 'Publish Release Notes Artifact'

        # Add other build tasks like linting, building, and testing here
        - task: npm@1
          inputs:
            command: 'custom'  # Run tests (adjust this based on your project)
            customCommand: 'test'
          displayName: 'Run Tests'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  jobs:
    - job: DeployJob
      displayName: 'Deploy Job'
      steps:
        - download: current  # Download artifacts from the Build stage
          artifact: releaseNotes
          displayName: 'Download Release Notes Artifact'

        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            artifactName: 'releaseNotes'
            targetPath: '$(Pipeline.Workspace)/releaseNotes'

